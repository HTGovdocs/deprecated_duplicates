Perhaps use latent semantic analysis on the govdocs? 
Some sort of tf-idf?

How to best normalize prop and val further (so no values are duplicated in the db)

vvv DOES THIS MAKE SENSE? vvv

find_clusters(['title_series', 'agency']).each do |cluster|
  make_cluster(cluster);
end

mysql> select count(distinct gd_item_id), count(distinct gd_cluster_id) from gd_item_cluster;
| count(distinct gd_item_id) | count(distinct gd_cluster_id) |
|                       1600 |                           816 |

... but:

find_clusters(['title_series', 'agency', 'pub_date']).each do |cluster|
  make_cluster(cluster);
end

mysql> select count(distinct gd_item_id), count(distinct gd_cluster_id) from gd_item_cluster;
| count(distinct gd_item_id) | count(distinct gd_cluster_id) |
|                       1134 |                           991 |

That is, the more specific the cluster definition the more clusters and the fewer clustered documents.
The less specific the cluster definition the more clustered documents and the fewer clusters.

... I guess that makes sense.

^^^ DID THAT MAKE SENSE ^^^



#########
## State of the project, Thu Mar 13 11:06:59 EDT 2014
#########

I have 30000 gd_items, 10000 from each source.
These have made 5975 clusters. 8385 distinct documents make these clusters.

There are on average 2.5 documents per cluster.

mysql> select avg(c) from (select gd_cluster_id, count(gd_item_id) as c from gd_item_cluster group by gd_cluster_id) as q;

| avg(c) |
| 2.5580 |

select c, count(c) from (
  select gd_cluster_id, count(gd_item_id) as c from gd_item_cluster group by gd_cluster_id
) as q group by c;

| c  | count(c) |
|  1 |        6 |
|  2 |     5070 |
|  3 |      361 |
|  4 |      164 |
|  5 |       81 |
|  6 |       61 |
|  7 |       52 |
|  8 |       33 |
|  9 |       17 |
| 10 |       25 |
| 11 |       13 |
| 12 |       16 |
| 13 |       13 |
| 14 |        9 |
| 15 |       13 |
| 16 |       10 |
| 17 |        6 |
| 18 |        5 |
| 19 |        5 |
| 20 |        5 |
| 21 |        3 |
| 22 |        2 |
| 23 |        2 |
| 24 |        3 |

Hmm, there are a couple of strange ones with c=1:

select gd_cluster_id, count(gd_item_id) as c from gd_item_cluster group by gd_cluster_id having c = 1;

| gd_cluster_id | c |
|         25708 | 1 |
|         25709 | 1 |
|         25710 | 1 |
|         25711 | 1 |
|         25712 | 1 |
|         25713 | 1 |

Some documents are members in many clusters (max 7 at this point):

select gd_item_id, count(gd_item_id) as g from gd_item_cluster group by gd_item_id having g >= 7;
+------------+---+
| gd_item_id | g |
+------------+---+
|       2426 | 7 |
|       2723 | 7 |
|       2988 | 7 |
|       9418 | 7 |
|      16375 | 7 |
|      16394 | 7 |
|      16416 | 7 |
|      24520 | 7 |
|      28002 | 7 |
+------------+---+


Current problem is that in order to get the web up, i need to rewrite code, and i don't know how best to do that.
Another problem is the weights, and the properties used in a cluster. It is not done well, and I do not know how
to do it better.
